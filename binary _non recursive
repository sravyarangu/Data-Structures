//created by me
#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#include<conio.h>
struct node
{
    int data;
    struct node*left;
    struct node*right;
}*root,*new,*t;
struct node*s[10];
 struct node*s2[10];
int top=-1,top2=-1,ch;
void insert(struct node*, struct node*);
void create();
void preorder(struct node*);
void postorder(struct node*);
void inorder(struct node*);
void push(struct node*);
struct node*pop();

void push(struct node*root)
    {
     top=top+1;
        s[top]=root;
        }
    struct node*pop()
    {
        struct node *t=s[top];
        top=top-1;
        return t;
    }
    
void create()
{
    int ele;
    new=(struct node*)malloc(sizeof(struct node));
    new->left=new->right=NULL;
    printf("data");
    scanf("%d",&ele);
    new->data=ele;
    if(root==NULL)
    {
    printf("root\n");
    root=new;
    }
    else
    {
        printf("insert\n");
      insert(root,new);
    }
}
void insert(struct node*root,struct node*new)
{
    int ch;
    printf("left(1) or right(2)");
    scanf("%d",&ch);
    switch(ch)
    {
        case 1:
        if(root->left==NULL)
        {
            printf("leftroot\n");
            root->left=new;
        }
        else
        {
            insert(root->left,new);
            break;
        }
        break;
        case 2:
        if(root->right==NULL)
        {
            printf("root right\n");
            root->right=new;
        }
        else
        {
            insert(root->right,new);
             break;
        }
        break;
    }
}
void inorder(struct node*root)
{
    struct node*s[10];
    struct node*t=root;
    while(t!=NULL)
    {
        push(t);
        t=t->left;
    }
    while(t==NULL&&top!=-1)
    {
        t=pop();
        printf("%d\t",t->data);
        t=t->right;
        while(t!=NULL)
        {
            push(t);
            t=t->left;
        }
    }
    getch();
}
void preorder(struct node*root)
{
   t=root;
    while(t!=NULL||top!=-1)
    {
        while(t!=NULL)
        {
        
        printf("%d\t",t->data);
        push(t);
        t=t->left;
        }
    if(top!=-1)
    {
        t=pop();
        t=t->right;
    }
}
getch();
}
void postorder(struct node*root)
{
      struct node*t=root;
    push(t);
    while(top!=-1)
    {
        t=pop();
        top2=++top2;
        s2[top2]=t;
        if(t->left!=NULL)
        {
            push(t->left);
        }
            if(t->right!=NULL)
            {
                push(t->right);
            }
            
    }
    while(top2!=-1)
    {
        root=s2[top2];
        top2=--top2;
        printf("%d\t",root->data);
    }
    getch();
}
int main()
{
    int choice,ele;printf("1.create &insert\t2.postorder\t3.preorder\t4.inorder\n5.exit");
    while(1)
    {
        printf("enter choice");
        scanf("%d",&ch);
        switch (ch)
        {
        case 1:
        {
        create();
            break;
        }
        case 2:
        {
            postorder(root);
            break;
        }
        case 3:
        {
            preorder(root);
            break;
        }
       case 4:
        {
            inorder(root);
            break;
        }
        case 5:
        {
            exit(0);
            break;
        }
    }
}
getch();
return 1;
}
